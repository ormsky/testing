<!-- views/pages/index.ejs -->

<!DOCTYPE html>
<html lang="en">
<head>
    <% include ../partials/head %>
</head>
<body class="container">

<header>
  <% include ../partials/header %>
</header>

<main>
<div id='player'>
PLAYER
</div>
<div class="container">


  <ul id="tabheaders" class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#tab1">Home</a></li>
  </ul>

  <div id="tabpanes" class="tab-content">
    <div id="tab1" class="tab-pane fade in active">
      <ul id="menu1" class="nav nav-pills nav-stacked"></ul>
    </div>
  </div>


</div>

<div id="audio-player-container">
<audio id="audio-player" width="400" controls/>
</div>

</main>


<footer>
  <% include ../partials/footer %>
</footer>


<script>

var handle = null;


socket.on('handle', function(data) {
  handle = data.handle;
  socket.emit('get_connections');
});

socket.on('connections', function(data) {
  for (var i in data) {
    var d = data[i];
    //alert( d.name + ' ' + d.handle );
  }
//  $("#connections").html( JSON.stringify(data) );
});


socket.on('playMedia', function(data) {
  if (data.player == handle) {
    $('#player').html("PLAYER play request received for ME! "+data.action+' - '+data.dataId+' - '+data.text);
    //var d = $('#audio-player-container');
    //$(d).html("");
    //$(d).html('<audio id="audio-player" width="400" controls/>');
    var x = document.getElementById('audio-player');
    x.src="";

    //x.load();
//    x.currentTime = 0;
    //$('#audio-player').attr("src",'media?id='+data.dataId)
    x.src = 'media?id='+data.dataId;
    x.play();
  } else {
    $('#player').html("PLAYER play request received for someone else.");
  }
  //alert('play media!');
  //alert(data);
});



function safeText(text) {
  if (!text) { return null; }
  var result = JSON.stringify(text);
  // remove the quotes that stringify adds in
  return result.substring(1,result.length - 1);
}

var menuData = [];


function processMenuData(target_tab_index,menudata,offset) {
  if (menudata && menudata.action == "stream") {
    menudata.player = handle;
    socket.emit('requestPlayMedia', menudata);
//    alert("stream "+menudata.dataId);
  } else {
    loadMenuData(target_tab_index, menudata, offset);
  }
}

function loadMenuData(target_tab_index,menudata,offset) {
  var uri = "http://dev1.ormsky.org:8080/menu.json";
  var title = ( menudata ? menudata.text : 'Home' );
  if (menudata)
  {
    var d = menudata; //menuData[tabindex][menuindex];
    var id = safeText(d.subMenu);
    var keys = d.keys;
    if (id) { uri += "?id="+id; }
    if (keys) { uri += "&keys="+JSON.stringify(keys); }
  }
  $.getJSON( uri, function (data) {
    if (menudata && menudata.action == "stream") {
      alert('stream!');
    } else {
      // store the menu items
      menuData.length = target_tab_index+1;
      menuData[target_tab_index] = data;
      // construct html
      addNewMenuTab(title,target_tab_index);
      var x = getTab(target_tab_index);
      $(x).html( getMenuAsHtml(data,target_tab_index) );
    }
  });
};


function getMenuAsHtml(data,tabIndex) {
    //data = menuData[tabIndex];
    // construct html
    var mdivs = '<ul class="click-select nav nav-pills nav-stacked">';
    for (var i in data.items) {
      var d = data.items[i];
      //var mid = safeText(d.subMenu);
      //menuData[target_tab_index][i] = d;
      var mtext = safeText(d.text);
      var mkeys = ((d.keys) ? $.param({keys : d.keys}) : '');
      //mdivs += '<li id="'+mid+'"'
      //  + ' onclick="handleMenuClick(\''+mid+'\', \''+mkeys+'\')"'
      //  + ' class="menuItem'+((i==0)?' active':'')+'"'
      //  + '><a>'+mtext+'</a></li>';
      mdivs += '<li'
        + ' data-tabindex="'+tabIndex+'"'
        + ' data-menuindex="'+i+'"'
        + ' data-action="'+d.action+'"'
        + ' onclick="handleMenuClick('+tabIndex+','+i+')"'
        + ' class="menuItem'+((i==0)?' active':'')+'"'
        + '><a>'+mtext+'</a></li>';
    }
    mdivs += "</ul>";

    return mdivs;
//    var x = getActiveTab();
//    var x = getTab(target_tab_index);
//    $(x).html( mdivs );
}


function handleMenuClick(tabindex,menuindex) {
  selectMenuItem(tabindex,menuindex);
  var d = menuData[tabindex].items[menuindex];

  processMenuData(tabindex+1,d,0);

//  var action = d.action;

//  if (action == "stream") {
//    alert("PLAY!");
//  } else {
//    selectMenuItem(tabindex,menuindex);
//    addNewMenu( d, tabindex+1);
//  }
}


function activateSelectedMenuItem() {
  var activeMenu = getActiveTabActiveMenuItem();

  var menuItem = activeMenu.first();
  var tabi = parseInt(menuItem.attr("data-tabindex"));
  var menui = parseInt(menuItem.attr("data-menuindex"));

  handleMenuClick(tabi,menui);
}

function selectMenuItem(tabindex,menuindex) {
  $(getTab(tabindex)).find("li").removeClass("active");
  $(getTabMenuItem(tabindex,menuindex)).addClass("active");
}

function selectMenuItem2(itemId) {
  var d = getActiveTabActiveMenuItem();
  $(d).removeClass("active");
  var m = $("#"+itemId);
  $(m).addClass("active");
}


function addNewMenuTab(title, target_tab_index) {
  //var d = menuData[i];
  var title = safeText(title);

  var th = $("#tabheaders");
  var tp = $("#tabpanes");

  var z1 = $(th).find("li");
  var z2 = $(z1).slice(target_tab_index);
  $(z2).remove();
  //$($(th).slice(target_tab_index)).remove();
  z1 = $(tp).find(".tab-pane");
  z2 = $(z1).slice(target_tab_index);
  $(z2).remove();
  //$($(tp).slice(target_tab_index)).remove();

//  var oldActiveHeader = th.find("li")[target_tab_index-1;
//  var oldActivePane = tp.find(".tab-pane.active");

  th.append("<li class='active'><a data-toggle='tab' href='#pane_"+target_tab_index+"'>"+title+"</a></li>");
  tp.append(
  '<div id="pane_'+target_tab_index+'" class="tab-pane fade in active"> \
    <ul class="nav nav-pills nav-stacked"></ul> \
   </div> \
  ');

  var x1 = $(th).find("li");
  var x2 = $(x1).slice(0,target_tab_index);
  $(x2).removeClass("active");

  x1 = $(tp).find(".tab-pane");
  x2 = $(x1).slice(0,target_tab_index);
  $(x2).removeClass("active");


//  oldActiveHeader.removeClass("active");
//  oldActivePane.removeClass("active");

//  displayMenu(target_tab_index, menu_data);
//  var x = getTab(target_tab_index);
  //$(x).html( getMenuAsHtml(target_tab_index) );
//  $(x).html( getMenuAsHtml(menu_data) );
}

function getTab(tabindex) {
  return $("#tabpanes").find(".tab-pane")[tabindex];
}

function getTabMenuItem(tabindex,menuindex) {
  return $(getTab(tabindex)).find("li")[menuindex];
}

function getActiveTab() {
  return $("#tabpanes").find(".tab-pane.active");
}

function getActiveTabActiveMenuItem() {
  return getActiveTab().find("li.active");
}


function menuBack() {
  var activeMenu = getActiveTabActiveMenuItem();

  var menuItem = activeMenu.first();
  var tabi = parseInt(menuItem.attr("data-tabindex"));
  if (tabi==0) { return; }

  var th = $("#tabheaders");
  var tp = $("#tabpanes");
  var x1 = $(th).find("li.active");
  var x2 = x1.prev();
  $(x1).removeClass("active");
  $(x2).addClass("active");

  x1 = $(tp).find(".tab-pane.active");
  x2 = x1.prev();;
  $(x1).removeClass("active");
  $(x2).addClass("active");
}


function handleKeyPress( keycode ) {
  console.log("keycode");
  console.log(keycode);
  var activeMenu = getActiveTabActiveMenuItem();
  var newItem;
  if (keycode==40) {
    newItem = activeMenu.next();
  } else if (keycode==38) {
    newItem = activeMenu.prev();
  } else if (keycode == 27) {
    menuBack();
  } else if (keycode == 13) {
    activateSelectedMenuItem();
    //var id = activeMenu.first().attr("id");
    //activateMenuItem(id);
  }
  if (newItem && newItem.length>0) {
    $(activeMenu).removeClass("active");
    $(newItem).addClass("active");
    // selectMenuItem2( newItem[0].id );
  }
}



socket.on('play audio', function (data) {
  //if (data.id != connectionnumber) {return;}
  var ct = data["content-type"];
  if (ct.startsWith('audio')) {
    var ap = document.getElementById('audioplayer');
    ap.setAttribute("src",data.source);
    ap.play();
  } else {
    var ap = document.getElementById('videoplayer');
    ap.setAttribute("src",data.source);
    ap.play();
  }
});


$(function() {

  processMenuData( 0, null, 0 );

  $("ul").on( "click", "li.click-select", function(x) { selectMenuItem(this.data-tabindex,this.data-menuindex); } );

  $(document).on("keydown", function(event) { handleKeyPress( event.keyCode? event.keyCode : event.which); });

  socket.emit('request_handle', { name: 'chrome' } );
});

</script>


</body>
</html>


